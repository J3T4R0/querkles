#lang racket

(require containment-patterns)

(check-true
 (match `(0 (0 1) 2 3)
   [(⋱ 1) #t]))

(check-equal?
  (match `(0 (1 zap) 2 3)
    [(⋱ `(1 ,a)) a])
  `zap)

(check-equal?
  (match '(0 0 (0 (0 0 (▹ 1)) 0 0))
    [(⋱ context `(▹ ,a))
     (⋱ context `(▹ ,(add1 a)))]))
;  '(0 0 (0 (0 0 (▹ 2)) 0 0))

(check-equal?
  (match '(0 1 (0 1 (1 (▹ 0))) 0 1)
    [(⋱+ c (and a (or `(▹ ,_) (? number?))))
     (⋱+ c (match a [`(,x ... (▹ ,y) ,z ,w ...)
                      `(,@x ,y (▹ ,z) ,@w)]))]))
;    '(0 1 (0 1 (1 0)) (▹ 0) 1))